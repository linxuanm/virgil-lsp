class ResponseError(code: int, message: string, data: JsonSerializable) extends JsonSerializable {
	def serialize() -> JsonValue {
		var b = JsonBuilder.new().num("code", code).str("message", message);
		if (data != null) b.add("data", data.serialize());
		return b.build();
	}
}

type ResponseContent {
	case Data(v: JsonSerializable);
	case Error(e: ResponseError);
}
class ResponseMessage(id: int, content: ResponseContent) extends JsonSerializable {
	def serialize() -> JsonValue {
		var b = JsonBuilder.new().num("id", id);
		match (content) {
			Data(v) => b.add("result", v.serialize());
			Error(e) => b.add("error", e.serialize());
		}
		return b.build();
	}
}
